{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:7123/api/accounts'; // we can put the base url with out api/accounts in environment.ts to change it based on the env.\n  }\n\n  createAccount(customerId, accountCreate) {\n    let url = `${this.apiUrl}/${customerId}`;\n    return this.http.post(url, accountCreate);\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AccountService","constructor","http","apiUrl","createAccount","customerId","accountCreate","url","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\rayan.kazma\\customer-account-app\\src\\app\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountCreate } from './account-create.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private apiUrl = 'http://localhost:7123/api/accounts'; // we can put the base url with out api/accounts in environment.ts to change it based on the env.\n\n  constructor(private http: HttpClient) {}\n\n  createAccount(\n    customerId: number,\n    accountCreate: AccountCreate\n  ): Observable<any> {\n    let url = `${this.apiUrl}/${customerId}`;\n    return this.http.post<any>(url, accountCreate);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC,CAAC,CAAC;EAEhB;;EAEvCC,aAAaA,CACXC,UAAkB,EAClBC,aAA4B;IAE5B,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,IAAIE,UAAU,EAAE;IACxC,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAMD,GAAG,EAAED,aAAa,CAAC;EAChD;EAAC,QAAAG,CAAA,G;qBAXUT,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdd,cAAc;IAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}