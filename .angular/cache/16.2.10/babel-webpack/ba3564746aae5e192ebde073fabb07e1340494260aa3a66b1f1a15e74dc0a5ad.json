{"ast":null,"code":"import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nfunction LegacySimpleSnackBar_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LegacySimpleSnackBar_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.action());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.data.action);\n  }\n}\nfunction MatLegacySnackBarContainer_ng_template_1_Template(rf, ctx) {}\nclass LegacySimpleSnackBar {\n  constructor(snackBarRef, data) {\n    this.snackBarRef = snackBarRef;\n    this.data = data;\n  }\n  /** Performs the action on the snack bar. */\n  action() {\n    this.snackBarRef.dismissWithAction();\n  }\n  /** If the action button should be shown. */\n  get hasAction() {\n    return !!this.data.action;\n  }\n  static #_ = this.ɵfac = function LegacySimpleSnackBar_Factory(t) {\n    return new (t || LegacySimpleSnackBar)(i0.ɵɵdirectiveInject(i1.MatSnackBarRef), i0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LegacySimpleSnackBar,\n    selectors: [[\"simple-snack-bar\"]],\n    hostAttrs: [1, \"mat-simple-snackbar\"],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"mat-simple-snack-bar-content\"], [\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function LegacySimpleSnackBar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, LegacySimpleSnackBar_div_2_Template, 3, 1, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.data.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatLegacyButton],\n    styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegacySimpleSnackBar, [{\n    type: Component,\n    args: [{\n      selector: 'simple-snack-bar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-simple-snackbar'\n      },\n      template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n      styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"]\n    }]\n  }], function () {\n    return [{\n      type: i1.MatSnackBarRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SNACK_BAR_DATA]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n  _afterPortalAttached() {\n    super._afterPortalAttached();\n    if (this.snackBarConfig.horizontalPosition === 'center') {\n      this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n    }\n    if (this.snackBarConfig.verticalPosition === 'top') {\n      this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n    }\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatLegacySnackBarContainer_BaseFactory;\n    return function MatLegacySnackBarContainer_Factory(t) {\n      return (ɵMatLegacySnackBarContainer_BaseFactory || (ɵMatLegacySnackBarContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacySnackBarContainer)))(t || MatLegacySnackBarContainer);\n    };\n  }();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatLegacySnackBarContainer,\n    selectors: [[\"snack-bar-container\"]],\n    hostAttrs: [1, \"mat-snack-bar-container\"],\n    hostVars: 1,\n    hostBindings: function MatLegacySnackBarContainer_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵsyntheticHostListener(\"@state.done\", function MatLegacySnackBarContainer_animation_state_done_HostBindingHandler($event) {\n          return ctx.onAnimationEnd($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 3,\n    consts: [[\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]],\n    template: function MatLegacySnackBarContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MatLegacySnackBarContainer_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"div\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role)(\"id\", ctx._liveElementId);\n      }\n    },\n    dependencies: [i1$1.CdkPortalOutlet],\n    styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"],\n    encapsulation: 2,\n    data: {\n      animation: [matSnackBarAnimations.snackBarState]\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBarContainer, [{\n    type: Component,\n    args: [{\n      selector: 'snack-bar-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matSnackBarAnimations.snackBarState],\n      host: {\n        'class': 'mat-snack-bar-container',\n        '[@state]': '_animationState',\n        '(@state.done)': 'onAnimationEnd($event)'\n      },\n      template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\",\n      styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {\n  static #_ = this.ɵfac = function MatLegacySnackBarModule_Factory(t) {\n    return new (t || MatLegacySnackBarModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatLegacySnackBarModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n      exports: [MatLegacySnackBarContainer, MatCommonModule],\n      declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar]\n    }]\n  }], null, null);\n})();\n\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n  constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n    super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n    this.simpleSnackBarComponent = LegacySimpleSnackBar;\n    this.snackBarContainerComponent = MatLegacySnackBarContainer;\n    this.handsetCssClass = 'mat-snack-bar-handset';\n  }\n  static #_ = this.ɵfac = function MatLegacySnackBar_Factory(t) {\n    return new (t || MatLegacySnackBar)(i0.ɵɵinject(i1$2.Overlay), i0.ɵɵinject(i2$1.LiveAnnouncer), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3$1.BreakpointObserver), i0.ɵɵinject(MatLegacySnackBar, 12), i0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatLegacySnackBar,\n    factory: MatLegacySnackBar.ɵfac,\n    providedIn: MatLegacySnackBarModule\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLegacySnackBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatLegacySnackBarModule\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Overlay\n    }, {\n      type: i2$1.LiveAnnouncer\n    }, {\n      type: i0.Injector\n    }, {\n      type: i3$1.BreakpointObserver\n    }, {\n      type: MatLegacySnackBar,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i1.MatSnackBarConfig,\n      decorators: [{\n        type: Inject,\n        args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };","map":{"version":3,"names":["i1$2","OverlayModule","i1$1","PortalModule","i2","CommonModule","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","NgModule","Injectable","Optional","SkipSelf","MatCommonModule","i3","MatLegacyButtonModule","i1","MAT_SNACK_BAR_DATA","_MatSnackBarContainerBase","matSnackBarAnimations","_MatSnackBarBase","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_LEGACY_SNACK_BAR_DATA","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBarConfig","MatLegacySnackBarConfig","MatSnackBarRef","MatLegacySnackBarRef","_MatLegacySnackBarBase","_MatLegacySnackBarContainerBase","matLegacySnackBarAnimations","i2$1","i3$1","LegacySimpleSnackBar_div_2_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","LegacySimpleSnackBar_div_2_Template_button_click_1_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","action","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵtextInterpolate","data","MatLegacySnackBarContainer_ng_template_1_Template","LegacySimpleSnackBar","constructor","snackBarRef","dismissWithAction","hasAction","_","ɵfac","LegacySimpleSnackBar_Factory","t","ɵɵdirectiveInject","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","decls","vars","consts","template","LegacySimpleSnackBar_Template","ɵɵtemplate","message","ɵɵproperty","dependencies","NgIf","MatLegacyButton","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","undefined","decorators","MatLegacySnackBarContainer","_afterPortalAttached","snackBarConfig","horizontalPosition","_elementRef","nativeElement","classList","add","verticalPosition","ɵMatLegacySnackBarContainer_BaseFactory","MatLegacySnackBarContainer_Factory","ɵɵgetInheritedFactory","hostVars","hostBindings","MatLegacySnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatLegacySnackBarContainer_animation_state_done_HostBindingHandler","$event","onAnimationEnd","ɵɵsyntheticHostProperty","_animationState","features","ɵɵInheritDefinitionFeature","MatLegacySnackBarContainer_Template","ɵɵelement","ɵɵattribute","_live","_role","_liveElementId","CdkPortalOutlet","animation","snackBarState","Default","animations","MatLegacySnackBarModule","MatLegacySnackBarModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MatLegacySnackBar","overlay","live","injector","breakpointObserver","parentSnackBar","defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","MatLegacySnackBar_Factory","ɵɵinject","Overlay","LiveAnnouncer","Injector","BreakpointObserver","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"sources":["C:/Users/rayan.kazma/customer-account-app/node_modules/@angular/material/fesm2022/legacy-snack-bar.mjs"],"sourcesContent":["import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass LegacySimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LegacySimpleSnackBar, deps: [{ token: i1.MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: LegacySimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-simple-snackbar\" }, ngImport: i0, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatLegacyButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LegacySimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-simple-snackbar',\n                    }, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatLegacySnackBarContainer, selector: \"snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mat-snack-bar-container\" }, usesInheritance: true, ngImport: i0, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"], dependencies: [{ kind: \"directive\", type: i1$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"] }]\n        }] });\n\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarModule, declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar], imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule], exports: [MatLegacySnackBarContainer, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n                    exports: [MatLegacySnackBarContainer, MatCommonModule],\n                    declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar],\n                }]\n        }] });\n\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = LegacySimpleSnackBar;\n        this.snackBarContainerComponent = MatLegacySnackBarContainer;\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBar, deps: [{ token: i1$2.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$1.BreakpointObserver }, { token: MatLegacySnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBar, providedIn: MatLegacySnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLegacySnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatLegacySnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$2.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$1.BreakpointObserver }, { type: MatLegacySnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}